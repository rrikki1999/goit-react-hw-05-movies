{"version":3,"file":"static/js/382.4abb1dd2.chunk.js","mappings":"sPACA,EAAgC,4BAAhC,EAAuE,uBAAvE,EAAyG,uBAAzG,EAA0I,sBAA1I,EAA2K,uBAA3K,EAAkN,4B,SCiDlN,EA7Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAgBpB,OAbAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEIC,EAAAA,EAAAA,IAAalB,GAAS,KAAD,EAAtCc,EAAQC,EAAAI,KACdZ,EAAQO,EAASM,KAAKd,MAAMS,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAE5BO,QAAQC,MAAM,6BAA4BR,EAAAM,IAAS,yBAAAN,EAAAS,OAAA,GAAAX,EAAA,kBAEtD,kBAPmB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KASpBjB,GACF,GAAG,CAACT,KAGF2B,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAqBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAgBC,SAC5BxB,EAAK0B,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAMC,EAAYH,EAAZG,aAAcC,EAASJ,EAATI,UAAS,OAC5CV,EAAAA,EAAAA,MAAA,MAAaC,UAAWC,EAAgBC,SAAA,EACtCC,EAAAA,EAAAA,KAAA,OACEH,UAAWC,EACXS,IACEF,EAAY,kCAAAG,OAC0BH,GAzBjC,8DA4BPI,IAAKL,EACLM,MAAO,IACPC,OAAQ,OAEVX,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAgBC,SAAEK,KACjCR,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAqBC,SAAA,CAAC,SAAOO,OAbpCH,EAcJ,QAKf,C","sources":["webpack://react-homework-template/./src/css/Cast.module.css?af17","pages/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__VS976\",\"castList\":\"Cast_castList__Nf+Xj\",\"castItem\":\"Cast_castItem__drjcb\",\"castImg\":\"Cast_castImg__3kRfJ\",\"castName\":\"Cast_castName__a5eb1\",\"castCharacter\":\"Cast_castCharacter__HUyQe\"};","import React, { useEffect, useState } from 'react';\nimport { getCreditsId } from '../services/api';\nimport { useParams } from 'react-router-dom';\nimport styles from '../css/Cast.module.css'\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const defaultImg = 'https://via.placeholder.com/200x300?text=No+Image+Available';\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const response = await getCreditsId(movieId);\n        setCast(response.data.cast);\n      } catch (error) {\n        console.error('Error fetching movie cast:', error);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <div className={styles.castContainer}>\n      <h1>Movie Cast</h1>\n      <ul className={styles.castList}>\n        {cast.map(({ id, name, profile_path, character }) => (\n          <li key={id} className={styles.castItem}>\n            <img\n              className={styles.castImg}\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                  : defaultImg\n              }\n              alt={name}\n              width={208}\n              height={300}\n            />\n            <h3 className={styles.castName}>{name}</h3>\n            <p className={styles.castCharacter}>Role: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n\nexport default Cast;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchMovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","getCreditsId","sent","data","t0","console","error","stop","apply","arguments","_jsxs","className","styles","children","_jsx","map","_ref2","id","name","profile_path","character","src","concat","alt","width","height"],"sourceRoot":""}