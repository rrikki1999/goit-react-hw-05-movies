{"version":3,"file":"static/js/696.eeb6861c.chunk.js","mappings":"sPACA,EAAgC,4BAAhC,EAAuE,uBAAvE,EAAyG,uBAAzG,EAA0I,sBAA1I,EAA2K,uBAA3K,EAAkN,4B,kBCyDlN,EApDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAmBtB,OAhBAG,EAAAA,EAAAA,YAAU,WACRL,GAAa,GACb,IAAMM,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEIC,EAAAA,EAAAA,IAAa1B,GAAS,KAAD,EAAtCsB,EAAQC,EAAAI,KACdpB,EAAQe,EAASM,KAAKtB,MAAMiB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAE5BR,EAAQQ,EAAAM,IAAQ,QAEI,OAFJN,EAAAC,KAAA,GAEhBb,GAAa,GAAOY,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAV,EAAA,wBAEvB,kBATmB,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KAWpBhB,GACF,GAAG,CAACjB,KAGFkC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAqBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACH3B,IAAa4B,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACpBzB,IAASwB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,6BACbC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAgBC,SAC5B/B,EAAKkC,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAMC,EAAYH,EAAZG,aAAcC,EAASJ,EAATI,UAAS,OAC5CX,EAAAA,EAAAA,MAAA,MAAaC,UAAWC,EAAgBC,SAAA,EACtCC,EAAAA,EAAAA,KAAA,OACEH,UAAWC,EACXU,IACEF,EAAY,kCAAAG,OAC0BH,GA9BjC,8DAiCPI,IAAKL,EACLM,MAAO,IACPC,OAAQ,OAEVZ,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAgBC,SAAEM,KACjCT,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAqBC,SAAA,CAAC,SAAOQ,OAbpCH,EAcJ,QAKf,C","sources":["webpack://react-homework-template/./src/css/Cast.module.css?af17","pages/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__VS976\",\"castList\":\"Cast_castList__Nf+Xj\",\"castItem\":\"Cast_castItem__drjcb\",\"castImg\":\"Cast_castImg__3kRfJ\",\"castName\":\"Cast_castName__a5eb1\",\"castCharacter\":\"Cast_castCharacter__HUyQe\"};","import React, { useEffect, useState } from 'react';\nimport { getCreditsId } from '../services/api';\nimport { useParams } from 'react-router-dom';\nimport styles from '../css/Cast.module.css'\nimport { Loader } from 'components/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const defaultImg = 'https://via.placeholder.com/200x300?text=No+Image+Available';\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchMovieCast = async () => {\n      try {\n        const response = await getCreditsId(movieId);\n        setCast(response.data.cast);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <div className={styles.castContainer}>\n      <h1>Movie Cast</h1>\n      {isLoading && <Loader />}\n      {error && <p>Something went wrong...</p>}\n      <ul className={styles.castList}>\n        {cast.map(({ id, name, profile_path, character }) => (\n          <li key={id} className={styles.castItem}>\n            <img\n              className={styles.castImg}\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                  : defaultImg\n              }\n              alt={name}\n              width={208}\n              height={300}\n            />\n            <h3 className={styles.castName}>{name}</h3>\n            <p className={styles.castCharacter}>Role: {character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n\nexport default Cast;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchMovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","getCreditsId","sent","data","t0","finish","stop","apply","arguments","_jsxs","className","styles","children","_jsx","Loader","map","_ref2","id","name","profile_path","character","src","concat","alt","width","height"],"sourceRoot":""}